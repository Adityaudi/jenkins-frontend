def buildDocker
def BRANCH_STAGE = 'master'
def REPO = 'adityaudi/app-frontend'


pipeline {
    agent any
    
    parameters {
        choice(name: 'DEPLOY_PRODUCTION', choices: ['YES', 'CANCEL'])
        text(name: 'Description', defaultValue: '')
        booleanParam(name: 'RUN_NOW', defaultValue: false)
    }

    stages{
        stage('Build project') {
            steps {
                nodejs('nodejs12') {
                    sh 'yarn install'
                }
            }
        }
        
        stage('Run Testing') {
            steps {
                echo 'passed'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {    
                    if (BRANCH_NAME == BRANCH_STAGE) {
                        buildDocker  = docker.build("${REPO}:stage}", "-f Dockerfile ./") 
                    }
                }
            }
        }

        stage('Run Testing frontend') {
            steps {
                script {
                    sh 'echo Testing passed!'
                }
            }
        }

        stage("Docker Build Testing - frontend"){
            steps {
                echo 'Pull image frontend - process.'
                script {
                    sshPublisher(
                        publishers: [
                            sshPublisherDesc(
                                configName: 'Build testing CI',
                                verbose: false,
                                transfers: [
                                    sshTransfer(
                                        execCommand: "docker pull ${REPO}:stage;",
                                        execTimeout: 120000,
                                    )
                                ]
                            )
                        ]
                    )
                }
                echo 'Pull image frontend - success.'
            }
        }
        
        stage("Connecttion on ansible"){
            steps {
                echo 'Connection - process.'
                script {
                    sshPublisher(
                        publishers: [
                            sshPublisherDesc(
                                configName: 'ansible',
                                verbose: false,
                                transfers: [
                                    sshTransfer(
                                        execCommand: "cd /etc/ansible && ansible-playbook -i hosts setup-stage.yml;",
                                        execTimeout: 120000,
                                    )
                                ]
                            )
                        ]
                    )
                }
                echo 'success.'
            }
        }
        
        stage("Docker compose build"){
            steps {
                echo 'Docker compose - running.'
                script {
                    sshPublisher(
                        publishers: [
                            sshPublisherDesc(
                                configName: 'ssh staging',
                                verbose: false,
                                transfers: [
                                    sshTransfer(
                                        execCommand: 'docker-compose up -d; docker ps',
                                        execTimeout: 120000,
                                    )
                                ]
                            )
                        ]
                    )
                }
                echo 'Docker compose - Success.'
            }
        }
    }    
}
